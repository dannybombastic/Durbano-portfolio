user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml font/truetype font/opentype 
               application/vnd.ms-fontobject image/svg+xml;

    upstream angular_ssr {
        server angular-ssr:4000;
        keepalive 64;
    }

    server {
        listen 80;
        server_name _;

        root /usr/share/nginx/html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # SEO files - serve statically with caching
        location = /robots.txt {
            add_header Content-Type text/plain;
            add_header Cache-Control "public, max-age=3600";
            try_files $uri =404;
        }

        location = /sitemap.xml {
            add_header Content-Type application/xml;
            add_header Cache-Control "public, max-age=3600";
            try_files $uri =404;
        }

        # Static assets - proxy to Angular SSR (ng serve handles these)
        # Only serve from nginx if file exists in browser folder, otherwise proxy to Angular
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp)$ {
            try_files $uri @angular_proxy;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Favicon - proxy to Angular SSR
        location = /favicon.svg {
            try_files $uri @angular_proxy;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Manifest - proxy to Angular SSR
        location = /manifest.json {
            try_files $uri @angular_proxy;
            add_header Content-Type application/json;
            expires 1d;
            add_header Cache-Control "public";
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Named location for proxying to Angular SSR
        location @angular_proxy {
            proxy_pass http://angular_ssr;
            proxy_http_version 1.1;
            
            # Headers for SSR
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # WebSocket support (for HMR in development)
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # Proxy all other requests to Angular SSR
        location / {
            try_files $uri @angular_proxy;
        }
    }
}
